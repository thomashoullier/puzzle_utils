:PROPERTIES:
:CATEGORY: puzzle_utils
:END:

* Documentation
** Document standard functions
See https://en.cppreference.com/w/cpp/ranges

*** TODO Introduce what are ranges, views, algorithms over them

*** DONE Printing a range
CLOSED: [2023-10-20 Fri 18:33]
Basic thing.

*** DONE iota range factory
CLOSED: [2023-10-20 Fri 18:33]
+ See https://en.cppreference.com/w/cpp/ranges/iota_view
+ Run the example for real in an example section of the build.

*** TODO Create a range from a list of numbers manually.
initializer_list?

*** TODO filter range adaptor
+ See https://en.cppreference.com/w/cpp/ranges/filter_view

*** TODO fold_left
+ Used as a way to sum.

*** TODO accumulate

* Functions to implement
** TODO Predicate for "is multiple of X"
We can do a variadic function, for multiple of X, Y, Z etc.

** TODO Unbounded sequence for Fibonacci
** TODO Printing a bounded range
Maybe implement a function taking a bounded range and printing it.
We probably can check using a template that it is bounded.
+ Can we make it so it is pipeable?
  See https://stackoverflow.com/questions/74074633/how-do-you-make-a-pipeable-function-like-rangestot-with-range-v3-ranges
  + Make the operator give back the range at the other end, so we can print
    intermediate ranges without interrupting processing.
+ Add the possibility of printing the first n elements for unbounded ranges.
+ Avoid using a naive trailing white space to the printing.
  See maybe the fmt library?
+ Relevant links:
  https://stackoverflow.com/questions/65676338/writing-a-c20-range-to-standard-output

* Maintenance
** HOLD Replace the external fmt library with the standard C++ when it becomes available
+ Use the C++23 <print> header when it becomes implemented in gcc.
  See https://en.cppreference.com/w/cpp/compiler_support/23
